BettingTable
action
    Dispatch CHANGE Event

param:
    inputData: array
    combinations: string[]
    noteCount: number[]
    totalNoteCount: number
    betFields: string[]

init 
    - generate input component based on input config
    - listen CHANGE Event of each InputComponent => onInputChange(id,data)
    

onInputChange
    - update inputData
    - generate combinations if necessary, null if no combinationDataId and dataSelect in config: genreateCombinations
    - validate data: onValidate
    - generate bet fields: generateBetFields
    - compute number of notes and total note count: computeNoteCount => save to noteCount and totaLNoteCount
    - Dispatch CHANGE Event with totalNoteCount

onValidate
    - validate each InputComponent: inputComponent.validate
    - validate overall data: table.validateData

genreateCombinations
    - check if combinationDataId exist in config, use the corresponding data
    - else if dataSelect exist in config, generate combination array base on dataSelect and input count
    - else set null to combinations

generateBetFields
    // %n: index of nth input, $n: data of nth input
    // ^n: nth index of combination, &n: data of the nth index of combination, 
    - generate betfield array base on pattern

computeNoteCount


    

InputComponent
action
    Dispatch CHANGE Event

    ['1|2|3|4|5|6|7|8|9|10|11|12|14',012345789,'2','1','4']
    ['1_2','1_4','2_4']

    [
        12OptionalFree_0123456789_012345789,
        14OptionalFree_0123456789_1,
        24OptionalFree_012345789_1
    ]


12345OPTIONAL_

    ['DRAGON|TIGER|TIE']
    null

    dataMappingFunc
    ['DRAGON','TIGER','TIE']
    ['1','2','3']

    12DT_&1

    [
        12DT_DRAGON,
        12DT_TIGER,
        12DT_TIE
    ]

    TODO_06_26
    - logic - 80%
    - checkboxes AInputComponent
    - Integration
    - 